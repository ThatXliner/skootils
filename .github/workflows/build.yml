name: Build
on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup pNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: src/frontend/pnpm-lock.yaml
      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install PyInstaller
        run: python -m pip install pyinstaller
      - name: Install dependencies for Tauri (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Load cached venv (learnatvcs)
        uses: actions/cache@v2
        with:
          path: src/learnatvcs/.venv
          key: ${{ runner.os }}-learnatvcs-${{ hashFiles('src/learnatvcs/poetry.lock') }}
          restore-keys: ${{ runner.os }}-learnatvcs-
      - name: Load cached venv (powerschool)
        uses: actions/cache@v2
        with:
          path: src/powerschool/.venv
          key: ${{ runner.os }}-powerschool-${{ hashFiles('src/powerschool/poetry.lock') }}
          restore-keys: ${{ runner.os }}-powerschool-
      - name: Load cached node_modules
        uses: actions/cache@v3
        with:
          path: |
            src/frontend/node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('src/frontend/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install learn@vcs dependencies
        working-directory: src/learnatvcs
        run: poetry install
      - name: Install PowerSchool dependencies
        working-directory: src/powerschool
        run: poetry install
      - name: Install frontend dependencies
        working-directory: src/frontend
        run: pnpm install

      - name: Build binaries
        run: timeout 600 python scripts/build.py --verbose

      - name: Verify binaries
        run: python scripts/verify_binaries.py

      - name: Load cached Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('src/frontend/src-tauri/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Build the app
        working-directory: src/frontend
        run: pnpm tauri build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }} ${{ runner.arch }} artifacts
          # No .app because it's pretty big and .dmg is nicer
          path: |
            src/frontend/src-tauri/target/release/bundle/*/*.dmg
            src/frontend/src-tauri/target/release/bundle/*/*.AppImage
            src/frontend/src-tauri/target/release/bundle/*/*.deb
            src/frontend/src-tauri/target/release/bundle/*/*.msi
      # - name: Build the app
      #   uses: tauri-apps/tauri-action@v0
      #   working-directory: src/frontend
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tagName: v__VERSION__ # tauri-action replaces \_\_VERSION\_\_ with the app version
      #     releaseName: 'v__VERSION__'
      #     releaseBody: 'See the assets to download this version and install.'
      #     releaseDraft: true
      #     prerelease: false

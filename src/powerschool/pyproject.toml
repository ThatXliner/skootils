[tool.poetry]
name = "powerschool"
description = "A browser-automation-based API for PowerSchool"
authors = ["Bryan Hu <bryan.hu.2020@gmail.com>"]
version = "0.1.0"

readme = "README.md"
license = "GPL-3.0-or-later"

classifiers = [
    # Get the list of trove classifiers here: https://pypi.org/classifiers/
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
]
homepage = "https://github.com/ThatXliner/powerschool"
# keywords = ["awesome", "project"]  # Maximum of 5 keywords

[tool.poetry.dependencies]
python = "^3.8"
pandas = "^1.5.1"
sympy = "^1.10.1"
keyring = "^23.9.3"
platformdirs = "^2.6.2"
requests = "^2.28.2"
beautifulsoup4 = "^4.11.1"
aiohttp = "^3.8.3"
interprog = "^0.2.0"

[tool.poetry.dev-dependencies]
pytest = "^7.2"
black = "*"
mypy = "*"
isort = "*"
pylint = "*"
toml = "^0.10.2"
hypothesis = "^6.66.0"
shed = "^0.10.5"
pytest-cov = "^4.0.0"
pytest-clarity = "^1.0.1"
types-beautifulsoup4 = "^4.12.0"

[tool.poe.tasks]
# Code linting
mypy   = {cmd = "mypy powerschool --strict", help = "Run MyPy on codebase"}
pylint = {cmd = "pylint powerschool --fail-under=8", help = "Run Pylint on codebase"}
check_black = {"cmd" = "black powerschool --check"}
check_isort = {"cmd" = "isort powerschool --check --profile=black"}
style    = ["check_black", "check_isort"]
codebase = ["pylint", "mypy"]


    [tool.poe.tasks.docs]
    cmd = "sphinx-build docs build"
    help = "Build documentation"

    [tool.poe.tasks.format]
    cmd = "shed"
    help = "Format code"

    [tool.poe.tasks.lint]
    sequence = ["style", "codebase"]
    help = "Lint codebase"

    [tool.poe.tasks.test]
    cmd = "pytest -vvv --cov=powerschool"
    help = "Simply run test suite"

    [tool.poe.tasks.ci]
    cmd = "pytest -vvv --cov=powerschool --cov-report=xml"
    help = "This workflow is for Github Actions"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "learnatvcs"
description = "Awesome lesson plan utilities"
authors = ["Bryan Hu <bryan.hu.2020@gmail.com>"]
version = "0.1.0"

readme = "README.md"
license = "GPL-3.0-or-later"

classifiers = [
    # Get the list of trove classifiers here: https://pypi.org/classifiers/
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
]
homepage = "https://github.com/ThatXliner/learnatvcs"
# keywords = ["awesome", "project"]  # Maximum of 5 keywords

[tool.poetry.dependencies]
python = "^3.9"
attrs = "^22.2.0"
beautifulsoup4 = "^4.11.2"
platformdirs = "^2.6.2"
data49 = "^0.4.4"
webdriver-manager = "^3.8.5"
interprog = "^0.2.0"

[tool.poetry.scripts]
learnatvcs = "learnatvcs.__main__:main"


[tool.poetry.dev-dependencies]
pytest = "^7.2.1"
black = "^24.2.0"
mypy = "^0.991"
isort = "^5.12.0"
pylint = "^2.15.9"
toml = "^0.10.2"
hypothesis = "^6.58.2"
shed = "^0.10.7"
pytest-cov = "^4.0.0"
pytest-clarity = "^1.0.1"

[tool.poe.tasks]
# Code linting
mypy   = {cmd = "mypy learnatvcs --strict", help = "Run MyPy on codebase"}
pylint = {cmd = "pylint learnatvcs --fail-under=8", help = "Run Pylint on codebase"}
check_black = {"cmd" = "black learnatvcs --check"}
check_isort = {"cmd" = "isort learnatvcs --check --profile=black"}
style    = ["check_black", "check_isort"]
codebase = ["pylint", "mypy"]

    [tool.poe.tasks.format]
    cmd = "shed"
    help = "Format code"

    [tool.poe.tasks.lint]
    sequence = ["style", "codebase"]
    help = "Lint codebase"

    [tool.poe.tasks.test]
    cmd = "pytest -vvv --cov=learnatvcs"
    help = "Simply run test suite"

    [tool.poe.tasks.ci]
    cmd = "pytest -vvv --cov=learnatvcs --cov-report=xml"
    help = "This workflow is for Github Actions"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
